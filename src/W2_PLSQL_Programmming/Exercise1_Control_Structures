-- Customer Table
CREATE TABLE customers (
    customer_id NUMBER PRIMARY KEY,
    name VARCHAR2(50),
    age NUMBER,
    balance NUMBER(10, 2),
    is_vip VARCHAR2(5) DEFAULT 'FALSE'
);

-- Loans Table
CREATE TABLE loans (
    loan_id NUMBER PRIMARY KEY,
    customer_id NUMBER,
    loan_amount NUMBER(10, 2),
    interest_rate NUMBER(5, 2),
    due_date DATE,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Insert Customers
INSERT INTO customers VALUES (101, 'Ramesh', 65, 12000, 'FALSE');
INSERT INTO customers VALUES (102, 'Sita', 59, 8000, 'FALSE');
INSERT INTO customers VALUES (103, 'Anil', 62, 9500, 'FALSE');
INSERT INTO customers VALUES (104, 'Geeta', 45, 15000, 'FALSE');
INSERT INTO customers VALUES (105, 'Meera', 70, 18000, 'FALSE');

-- Insert Loans
INSERT INTO loans VALUES (201, 101, 50000, 8.5, SYSDATE + 10);
INSERT INTO loans VALUES (202, 102, 30000, 9.0, SYSDATE + 45);
INSERT INTO loans VALUES (203, 103, 40000, 8.0, SYSDATE + 5);
INSERT INTO loans VALUES (204, 104, 25000, 7.5, SYSDATE + 90);
INSERT INTO loans VALUES (205, 105, 60000, 9.2, SYSDATE + 20);

COMMIT;

-- Scenario 1 : Write a PL/SQL block that loops through all customers, checks their age, and if they are above 60, apply a 1% discount to their current loan interest rates.
BEGIN
   FOR rec IN (SELECT customer_id, age FROM customers) LOOP
      IF rec.age > 60 THEN
         UPDATE loans
         SET interest_rate = interest_rate - 1
         WHERE customer_id = rec.customer_id;
         dbms_output.put_line('Interest rate discounted for Customer ID: ' || rec.customer_id);
      END IF;
   END LOOP;
END;
/

-- Scenario 2 : Write a PL/SQL block that iterates through all customers and sets a flag IsVIP to TRUE for those with a balance over $10,000.
BEGIN
    FOR rec IN (SELECT customer_id, balance FROM customers) LOOP
        IF rec.balance > 10000 THEN
            UPDATE customers
            SET is_vip = TRUE
            WHERE customer_id = rec.customer_id;
            dbms_output.put_line('Customer ID '|| rec.customer_id || ' promoted to VIP');
        END IF;
    END LOOP;
END;
/

-- Scenario 3 : Question: Write a PL/SQL block that fetches all loans due in the next 30 days and prints a reminder message for each customer.
BEGIN
    FOR rec IN (SELECT customer_id, loan_amount, due_date FROM loans WHERE due_date BETWEEN SYSDATE AND SYSDATE+30) LOOP
        dbms_output.put_line('Reminder : Loan due for Customer : ' ||rec.customer_id|| ' of : $' || rec.loan_amount || ' on ' || TO_CHAR(rec.due_date,'DD-MON-YYYY'));
    END LOOP;
END;
/